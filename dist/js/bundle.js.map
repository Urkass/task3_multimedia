{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 7dcfd08333b4e36ab32d","webpack:///./src/js/index.js","webpack:///./src/js/app.js","webpack:///./src/js/player.js","webpack:///./src/js/song.js","webpack:///./src/js/subtitles.js","webpack:///./src/js/video.js","webpack:///./~/subtitles-parser/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","onDOMContentLoaded","window","app","_app2","_app","document","addEventListener","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_player","_player2","App","onFormSubmit","e","preventDefault","this","links","video","crossorigin","form","querySelector","subtitles","audio","pagePlayer","classList","remove","pageForm","add","player","bind","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_song","_song2","_video","_video2","_subtitles","_subtitles2","Player","initCanvas","videoWidth","videoHeight","prepareWebGL","canvas","gl","sourceCanvas","program","webglContext","createProgram","vertexCode","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentCode","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","useProgram","positionLocation","getAttribLocation","texcoordLocation","GL_TIME_UNIFORM","getUniformLocation","resolutionLocation","uniform2f","webglCanvas","width","height","buffer","createBuffer","vertices","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","textureCoordinates","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","drawScreen","t","undefined","delta","previousTime","context","drawImage","videoElement","theCanvas","checkForSubtitles","postprocessWebGL","requestAnimationFrame","GL_TIME","uniform1f","texImage2D","RGBA","UNSIGNED_BYTE","viewport","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","currentTime","data","index","endTime","flag","pause","timerForSubtitles","drawSubtitlesPicture","text","delay","_this2","setTimeout","play","fillStyle","fillRect","font","textBaseline","textAlign","fillText","getElementById","getContext","_this","playButton","stopButton","song","Song","link","Audio","crossOrigin","AudioContext","webkitAudioContext","source","createMediaElementSource","distortion","createWaveShaper","biquadFilter","createBiquadFilter","type","frequency","gain","connect","destination","bufferSize","pinkNoise","b0","b1","b2","b3","b4","b5","b6","node","createScriptProcessor","onaudioprocess","output","outputBuffer","getChannelData","white","Math","random","_subtitlesParser","_subtitlesParser2","Subtitles","getFile","xhr","XMLHttpRequest","open","send","status","fromSrt","response","parseData","countSeconds","time","replace","hours","slice","minutes","Number","seconds","forEach","elem","startTime","Video","createElement","setAttribute","videoDiv","appendChild","muted","parser","pItems","ms","useMs","regex","split","shift","items","push","trim","timeMs","toSrt","Array","res","s","isNaN","msTime","parseInt","val","parts","exec","measures","toString","join"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _app = __webpack_require__(1);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tdocument.addEventListener('DOMContentLoaded', onDOMContentLoaded); // import {calc} from './calc';\n\t\n\t\n\tfunction onDOMContentLoaded() {\n\t    window.app = new _app2.default();\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _player = __webpack_require__(2);\n\t\n\tvar _player2 = _interopRequireDefault(_player);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar App = function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    var crossorigin = 'http://cors.io/?u=';\n\t    this.form = document.querySelector('.panel__form');\n\t    this.pageForm = document.querySelector('.page_content_form');\n\t    this.pagePlayer = document.querySelector('.page_content_player');\n\t\n\t    this.links = {\n\t        video: '',\n\t        subtitles: '',\n\t        audio: ''\n\t    };\n\t\n\t    this.form.addEventListener('submit', onFormSubmit.bind(this));\n\t\n\t    function onFormSubmit(e) {\n\t        e.preventDefault();\n\t\n\t        this.links.video = crossorigin + this.form.querySelector('[name=\"video\"]').value;\n\t        this.links.subtitles = crossorigin + this.form.querySelector('[name=\"subtitles\"]').value;\n\t        this.links.audio = crossorigin + this.form.querySelector('[name=\"audio\"]').value;\n\t\n\t        this.pagePlayer.classList.remove('page_hidden');\n\t        this.pageForm.classList.add('page_hidden');\n\t        this.player = new _player2.default(this.links, this.pagePlayer);\n\t    }\n\t};\n\t\n\texports.default = App;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _song = __webpack_require__(3);\n\t\n\tvar _song2 = _interopRequireDefault(_song);\n\t\n\tvar _video = __webpack_require__(5);\n\t\n\tvar _video2 = _interopRequireDefault(_video);\n\t\n\tvar _subtitles = __webpack_require__(4);\n\t\n\tvar _subtitles2 = _interopRequireDefault(_subtitles);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Player = function () {\n\t    function Player(links, pagePlayer) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, Player);\n\t\n\t        // this.links = links;\n\t        this.pagePlayer = pagePlayer;\n\t        this.player = pagePlayer.querySelector('.player');\n\t        this.playButton = this.player.querySelector('.player__play');\n\t        this.stopButton = this.player.querySelector('.player__stop');\n\t        this.video = new _video2.default(links.video, this.pagePlayer);\n\t        this.song = new _song2.default(links.audio);\n\t        this.subtitles = new _subtitles2.default(links.subtitles);\n\t        this.previousTime = 0;\n\t        // console.log(`${this.video.videoElement.videoWidth}:${this.video.videoElement.videoHeight}`);\n\t        this.video.videoElement.addEventListener('canplaythrough', function () {\n\t            initCanvas.call(_this, _this.video.videoElement.videoWidth, _this.video.videoElement.videoHeight);\n\t        });\n\t        this.playButton.addEventListener('click', function () {\n\t            _this.play();\n\t        });\n\t        this.stopButton.addEventListener('click', function () {\n\t            _this.pause();\n\t        });\n\t\n\t        function initCanvas(videoWidth, videoHeight) {\n\t            var theCanvas = document.getElementById('canvas');\n\t            var context = theCanvas.getContext('2d');\n\t            var webglCanvas = document.getElementById('webgl-canvas');\n\t            var webglContext = webglCanvas.getContext('webgl') || webglCanvas.getContext('experimental-webgl');\n\t            webglCanvas.width = theCanvas.width = videoWidth;\n\t            webglCanvas.height = theCanvas.height = videoHeight;\n\t\n\t            var GL_TIME = 0;\n\t            var GL_TIME_UNIFORM = null;\n\t\n\t            prepareWebGL.call(this);\n\t\n\t            // initScratches();\n\t            this.play();\n\t\n\t            drawScreen.call(this);\n\t\n\t            function prepareWebGL(canvas, gl, sourceCanvas) {\n\t                var program = webglContext.createProgram();\n\t\n\t                var vertexCode = 'attribute vec2 coordinates;' + 'attribute vec2 texture_coordinates;' + 'varying vec2 v_texcoord;' + 'void main() {' + '  gl_Position = vec4(coordinates, 0.0, 1.0);' + '  v_texcoord = texture_coordinates;' + '}';\n\t\n\t                var vertexShader = webglContext.createShader(webglContext.VERTEX_SHADER);\n\t                webglContext.shaderSource(vertexShader, vertexCode);\n\t                webglContext.compileShader(vertexShader);\n\t\n\t                var fragmentCode = 'precision mediump float;' + 'varying vec2 v_texcoord;' + 'uniform sampler2D u_texture;' + 'uniform float u_time;' + 'uniform vec2 u_resolution;' + 'vec2 uv;' + 'vec3 grayscale (vec3 color) {' + '   return vec3(0.2126*color.r + 0.7152*color.g + 0.0722*color.b);' + '}' + 'float rand(vec2 co){' + '   return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);' + '}' + 'float rand(float c){' + '   return rand(vec2(c,1.0));' + '}' + 'float randomLine(float seed){' + '   float b = 0.01 * rand(seed);' + '   float a = rand(seed+1.0);' + '   float c = rand(seed+2.0) - 0.5;' + '   float mu = rand(seed+3.0);' + '   float l = 1.0;' + '   if ( mu > 0.2)' + '   l = pow(  abs(a * uv.x + b * uv.y + c ), 1.0/8.0 );' + '   else' + '   l = 2.0 - pow( abs(a * uv.x + b * uv.y + c), 1.0/8.0 );' + '   return mix(0.5, 1.0, l);' + '}' + 'float randomBlotch(float seed){' + '\t  float x = rand(seed);' + '\t  float y = rand(seed+1.0);' + '\t  float s = 0.01 * rand(seed+2.0);' + '\t  vec2 p = vec2(x,y) - uv;' + '\t  p.x *= u_resolution.x / u_resolution.y;' + '\t  float a = atan(p.y,p.x);' + '\t  float v = 1.0;' + '\t  float ss = s*s * (sin(6.2831*a*x)*0.1 + 1.0);' + '\t  if ( dot(p,p) < ss ) v = 0.2;' + '\t  else' + '\t\tv = pow(dot(p,p) - ss, 1.0/16.0);' + '   return mix(0.3 + 0.2 * (1.0 - (s / 0.02)), 1.0, v);' + '}' + 'void main() {' + '   uv = v_texcoord.xy;' + '   float t = float(int(u_time * 20.0));' +\n\t                // Сохраняем кадр\n\t                '   vec3 image = texture2D(u_texture, uv).rgb;' +\n\t                // Добавляем ч/б\n\t                // 'image = grayscale(image);'+\n\t                '   float luma = dot( vec3(0.2126, 0.7152, 0.0722), image );' + '   image = luma * vec3(0.7, 0.7, 0.7);' +\n\t                // Create a time-varyting vignetting effect\n\t                '   float vI = 16.0 * (uv.x * (1.0-uv.x) * uv.y * (1.0-uv.y));' + 'vI *= mix( 0.7, 1.0, rand(t + 0.5));' +\n\t                // // Add additive flicker\n\t                'vI += 1.0 + 0.4 * rand(t+8.);' +\n\t                // // Add a fixed vignetting (independent of the flicker)\n\t                'vI *= pow(16.0 * uv.x * (1.0-uv.x) * uv.y * (1.0-uv.y), 0.4);' +\n\t\n\t                // Случайные линии\n\t                'int l = int(8.0 * rand(t+7.0));' + 'if ( 0 < l ) vI *= randomLine( t+6.0+17.* float(0));' + 'if ( 1 < l ) vI *= randomLine( t+6.0+17.* float(1));' + 'if ( 2 < l ) vI *= randomLine( t+6.0+17.* float(2));' + 'if ( 3 < l ) vI *= randomLine( t+6.0+17.* float(3));' + 'if ( 4 < l ) vI *= randomLine( t+6.0+17.* float(4));' + 'if ( 5 < l ) vI *= randomLine( t+6.0+17.* float(5));' + 'if ( 6 < l ) vI *= randomLine( t+6.0+17.* float(6));' + 'if ( 7 < l ) vI *= randomLine( t+6.0+17.* float(7));' +\n\t\n\t                // Случайные пятна\n\t\n\t                'image = image * vI;' + 'gl_FragColor = vec4(image, 1.0);' +\n\t\n\t                // Черно-белый эффект\n\t                // '   gl_FragColor = vec4(grayscale(texture2D(u_texture, v_texcoord).rgb), 1.0);' +\n\t                // Зернистость\n\t                // '   gl_FragColor.xyz *= (1.0+(rand(uv+t*.01)-.2)*.15);\t' +\n\t                '}';\n\t\n\t                var fragmentShader = webglContext.createShader(webglContext.FRAGMENT_SHADER);\n\t                webglContext.shaderSource(fragmentShader, fragmentCode);\n\t                webglContext.compileShader(fragmentShader);\n\t\n\t                webglContext.attachShader(program, vertexShader);\n\t                webglContext.attachShader(program, fragmentShader);\n\t\n\t                webglContext.linkProgram(program);\n\t                webglContext.useProgram(program);\n\t\n\t                var positionLocation = webglContext.getAttribLocation(program, 'coordinates');\n\t                var texcoordLocation = webglContext.getAttribLocation(program, 'texture_coordinates');\n\t                GL_TIME_UNIFORM = webglContext.getUniformLocation(program, 'u_time');\n\t                var resolutionLocation = webglContext.getUniformLocation(program, \"u_resolution\");\n\t                webglContext.uniform2f(resolutionLocation, webglCanvas.width, webglCanvas.height);\n\t\n\t                var buffer = webglContext.createBuffer();\n\t                var vertices = [-1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1];\n\t                webglContext.bindBuffer(webglContext.ARRAY_BUFFER, buffer);\n\t                webglContext.bufferData(webglContext.ARRAY_BUFFER, new Float32Array(vertices), webglContext.STATIC_DRAW);\n\t                webglContext.enableVertexAttribArray(positionLocation);\n\t                webglContext.vertexAttribPointer(positionLocation, 2, webglContext.FLOAT, false, 0, 0);\n\t\n\t                buffer = webglContext.createBuffer();\n\t                var textureCoordinates = [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0];\n\t                webglContext.bindBuffer(webglContext.ARRAY_BUFFER, buffer);\n\t                webglContext.bufferData(webglContext.ARRAY_BUFFER, new Float32Array(textureCoordinates), webglContext.STATIC_DRAW);\n\t                webglContext.enableVertexAttribArray(texcoordLocation);\n\t                webglContext.vertexAttribPointer(texcoordLocation, 2, webglContext.FLOAT, false, 0, 0);\n\t\n\t                var texture = webglContext.createTexture();\n\t                webglContext.bindTexture(webglContext.TEXTURE_2D, texture);\n\t                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_WRAP_S, webglContext.CLAMP_TO_EDGE);\n\t                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_WRAP_T, webglContext.CLAMP_TO_EDGE);\n\t                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_MIN_FILTER, webglContext.NEAREST);\n\t                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_MAG_FILTER, webglContext.NEAREST);\n\t            }\n\t\n\t            function drawScreen(t) {\n\t                // if (this.video.videoElement.paused || this.video.videoElement.ended) {\n\t                //     return false;\n\t                // }\n\t                // console.log('t: '+t);\n\t                // console.log('this.previousTime: '+this.previousTime);\n\t                if (t === undefined) t = 0;\n\t                var delta = t - this.previousTime;\n\t                // console.log('delta: '+delta);\n\t                this.previousTime = t;\n\t                context.drawImage(this.video.videoElement, 0, 0, theCanvas.width, theCanvas.height);\n\t                checkForSubtitles.call(this);\n\t                // addGrayScale();\n\t                // addScratches.call(this);\n\t                postprocessWebGL(delta);\n\t                requestAnimationFrame(drawScreen.bind(this));\n\t            }\n\t\n\t            function postprocessWebGL(delta) {\n\t                // console.log('gltime:'+GL_TIME);\n\t                GL_TIME += delta;\n\t                webglContext.uniform1f(GL_TIME_UNIFORM, GL_TIME / 1000);\n\t\n\t                webglContext.texImage2D(webglContext.TEXTURE_2D, 0, webglContext.RGBA, webglContext.RGBA, webglContext.UNSIGNED_BYTE, theCanvas);\n\t\n\t                webglContext.viewport(0, 0, webglCanvas.width, webglCanvas.height);\n\t                webglContext.enable(webglContext.DEPTH_TEST);\n\t                webglContext.clear(webglContext.COLOR_BUFFER_BIT);\n\t                webglContext.drawArrays(webglContext.TRIANGLES, 0, 6);\n\t            }\n\t\n\t            function checkForSubtitles() {\n\t\n\t                if (this.video.videoElement.currentTime >= this.subtitles.data[this.subtitles.index].endTime) {\n\t                    if (!this.subtitles.flag) {\n\t                        this.video.pause();\n\t                        timerForSubtitles.call(this, 3000);\n\t                        this.subtitles.flag = true;\n\t                    }\n\t                    drawSubtitlesPicture(this.subtitles.data[this.subtitles.index].text);\n\t                    // console.log(this.video.videoElement.currentTime);\n\t                }\n\t            }\n\t\n\t            function timerForSubtitles(delay) {\n\t                var _this2 = this;\n\t\n\t                setTimeout(function () {\n\t                    _this2.video.play();\n\t                    _this2.subtitles.flag = false;\n\t                    _this2.subtitles.index++;\n\t                }, 3000);\n\t            }\n\t\n\t            function drawSubtitlesPicture(text) {\n\t                context.fillStyle = '#000000';\n\t                context.fillRect(0, 0, theCanvas.width, theCanvas.height);\n\t                context.fillStyle = 'white';\n\t                context.font = '30px Oranienbaum';\n\t                context.textBaseline = 'middle';\n\t                context.textAlign = \"center\";\n\t                context.fillText(text, theCanvas.width / 2, theCanvas.height / 2);\n\t            }\n\t\n\t            function addGrayScale() {\n\t                // First, draw it into the backing canvas\n\t                // Grab the pixel data from the backing canvas\n\t                var idata = context.getImageData(0, 0, theCanvas.width, theCanvas.height);\n\t                var data = idata.data;\n\t                // Loop through the pixels, turning them grayscale\n\t                for (var i = 0; i < data.length; i += 4) {\n\t                    var r = data[i];\n\t                    var g = data[i + 1];\n\t                    var b = data[i + 2];\n\t                    var brightness = 3 * r + 4 * g + b >>> 3;\n\t                    data[i] = brightness;\n\t                    data[i + 1] = brightness;\n\t                    data[i + 2] = brightness;\n\t                }\n\t                idata.data.set(data);\n\t                // Draw the pixels onto the visible canvas\n\t                context.putImageData(idata, 0, 0);\n\t            }\n\t        }\n\t    }\n\t\n\t    _createClass(Player, [{\n\t        key: 'play',\n\t        value: function play() {\n\t            this.video.play();\n\t            this.song.play();\n\t        }\n\t    }, {\n\t        key: 'pause',\n\t        value: function pause() {\n\t            this.video.pause();\n\t            this.song.pause();\n\t        }\n\t    }]);\n\t\n\t    return Player;\n\t}();\n\t\n\texports.default = Player;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Song = function () {\n\t    function Song(link) {\n\t        _classCallCheck(this, Song);\n\t\n\t        this.link = link;\n\t        this.audio = new Audio(link);\n\t        this.audio.crossOrigin = \"anonymous\";\n\t        this.context = new (window.AudioContext || window.webkitAudioContext)();\n\t        this.source = this.context.createMediaElementSource(this.audio);\n\t        // gainNode = context.createGain();\n\t        //filterNode = context.createBiquadFilter();\n\t\n\t        var distortion = this.context.createWaveShaper();\n\t        var biquadFilter = this.context.createBiquadFilter();\n\t        biquadFilter.type = 'lowpass';\n\t        biquadFilter.frequency.value = 1000;\n\t        biquadFilter.gain.value = 20;\n\t        this.source.connect(distortion);\n\t        distortion.connect(biquadFilter);\n\t        // this.generateWHiteNoize();\n\t        biquadFilter.connect(this.context.destination);\n\t    }\n\t\n\t    _createClass(Song, [{\n\t        key: \"addDirtyEffects\",\n\t        value: function addDirtyEffects() {}\n\t    }, {\n\t        key: \"generateWHiteNoize\",\n\t        value: function generateWHiteNoize() {\n\t            var bufferSize = 4096;\n\t            var pinkNoise = function () {\n\t                var b0, b1, b2, b3, b4, b5, b6;\n\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t                var node = this.context.createScriptProcessor(bufferSize, 1, 1);\n\t                node.onaudioprocess = function (e) {\n\t                    var output = e.outputBuffer.getChannelData(0);\n\t                    for (var i = 0; i < bufferSize; i++) {\n\t                        var white = Math.random() * 2 - 1;\n\t                        b0 = 0.99886 * b0 + white * 0.0555179;\n\t                        b1 = 0.99332 * b1 + white * 0.0750759;\n\t                        b2 = 0.96900 * b2 + white * 0.1538520;\n\t                        b3 = 0.86650 * b3 + white * 0.3104856;\n\t                        b4 = 0.55000 * b4 + white * 0.5329522;\n\t                        b5 = -0.7616 * b5 - white * 0.0168980;\n\t                        output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                        output[i] *= 22.9; // (roughly) compensate for gain\n\t                        b6 = white * 0.115926;\n\t                    }\n\t                };\n\t                return node;\n\t            }.bind(this)();\n\t\n\t            pinkNoise.connect(this.context.destination);\n\t        }\n\t    }, {\n\t        key: \"play\",\n\t        value: function play() {\n\t            this.audio.play();\n\t        }\n\t    }, {\n\t        key: \"pause\",\n\t        value: function pause() {\n\t            this.audio.pause();\n\t        }\n\t    }]);\n\t\n\t    return Song;\n\t}();\n\t\n\texports.default = Song;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _subtitlesParser = __webpack_require__(6);\n\t\n\tvar _subtitlesParser2 = _interopRequireDefault(_subtitlesParser);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// import moment from 'moment';\n\t\n\tvar Subtitles = function () {\n\t    function Subtitles(link) {\n\t        _classCallCheck(this, Subtitles);\n\t\n\t        this.link = link;\n\t        // let data;\n\t        this.data = getFile();\n\t        this.parseData();\n\t        this.index = 0; // индекс текущих субтитров\n\t        this.flag = false; // в видео еще не было субтитров\n\t\n\t        function getFile() {\n\t            var xhr = new XMLHttpRequest();\n\t            xhr.open('GET', link, false);\n\t            xhr.send();\n\t            if (xhr.status === 200) {\n\t                return _subtitlesParser2.default.fromSrt(xhr.response);\n\t            }\n\t        }\n\t    }\n\t\n\t    _createClass(Subtitles, [{\n\t        key: 'parseData',\n\t        value: function parseData() {\n\t            this.data.forEach(function (elem) {\n\t                elem.startTime = countSeconds(elem.startTime);\n\t                elem.endTime = countSeconds(elem.endTime);\n\t            });\n\t\n\t            function countSeconds(time) {\n\t                time = time.replace(/,/g, '.');\n\t                var hours = 60 * time.slice(0, 2);\n\t                var minutes = 60 * (hours + Number(time.slice(3, 5)));\n\t                var seconds = minutes + Number(time.slice(6, 12));\n\t                return seconds;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Subtitles;\n\t}();\n\t\n\texports.default = Subtitles;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Video = function () {\n\t    function Video(link, pagePlayer) {\n\t        _classCallCheck(this, Video);\n\t\n\t        // this.link = link;\n\t        this.videoElement = document.createElement('video');\n\t        this.videoElement.setAttribute('crossorigin', 'anonymous');\n\t        this.videoDiv = document.createElement('div');\n\t        pagePlayer.appendChild(this.videoDiv);\n\t        this.videoDiv.appendChild(this.videoElement);\n\t        this.videoDiv.setAttribute('style', 'display:none;');\n\t        this.videoElement.setAttribute('src', link);\n\t        // this.videoElement.setAttribute('width', this.videoElement.videoWidth/2);\n\t        // this.videoElement.setAttribute('height', this.videoElement.videoHeight/2);\n\t        this.videoElement.muted = true;\n\t    }\n\t\n\t    _createClass(Video, [{\n\t        key: 'play',\n\t        value: function play() {\n\t            this.videoElement.play();\n\t        }\n\t    }, {\n\t        key: 'pause',\n\t        value: function pause() {\n\t            this.videoElement.pause();\n\t        }\n\t    }]);\n\t\n\t    return Video;\n\t}();\n\t\n\texports.default = Video;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar parser = (function() {\n\t    var pItems = {};\n\t\n\t    /**\n\t     * Converts SubRip subtitles into array of objects\n\t     * [{\n\t     *     id:        `Number of subtitle`\n\t     *     startTime: `Start time of subtitle`\n\t     *     endTime:   `End time of subtitle\n\t     *     text: `Text of subtitle`\n\t     * }]\n\t     *\n\t     * @param  {String}  data SubRip suntitles string\n\t     * @param  {Boolean} ms   Optional: use milliseconds for startTime and endTime\n\t     * @return {Array}  \n\t     */\n\t    pItems.fromSrt = function(data, ms) {\n\t        var useMs = ms ? true : false;\n\t\n\t        data = data.replace(/\\r/g, '');\n\t        var regex = /(\\d+)\\n(\\d{2}:\\d{2}:\\d{2},\\d{3}) --> (\\d{2}:\\d{2}:\\d{2},\\d{3})/g;\n\t        data = data.split(regex);\n\t        data.shift();\n\t\n\t        var items = [];\n\t        for (var i = 0; i < data.length; i += 4) {\n\t            items.push({\n\t                id: data[i].trim(),\n\t                startTime: useMs ? timeMs(data[i + 1].trim()) : data[i + 1].trim(),\n\t                endTime: useMs ? timeMs(data[i + 2].trim()) : data[i + 2].trim(),\n\t                text: data[i + 3].trim()\n\t            });\n\t        }\n\t\n\t        return items;\n\t    };\n\t\n\t    /**\n\t     * Converts Array of objects created by this module to SubRip subtitles\n\t     * @param  {Array}  data\n\t     * @return {String}      SubRip subtitles string\n\t     */\n\t    pItems.toSrt = function(data) {\n\t        if (!data instanceof Array) return '';\n\t        var res = '';\n\t\n\t        for (var i = 0; i < data.length; i++) {\n\t            var s = data[i];\n\t\n\t            if (!isNaN(s.startTime) && !isNaN(s.endTime)) {\n\t                s.startTime = msTime(parseInt(s.startTime, 10));\n\t                s.endTime = msTime(parseInt(s.endTime, 10));\n\t            }\n\t\n\t            res += s.id + '\\r\\n';\n\t            res += s.startTime + ' --> ' + s.endTime + '\\r\\n';\n\t            res += s.text.replace('\\n', '\\r\\n') + '\\r\\n\\r\\n';\n\t        }\n\t\n\t        return res;\n\t    };\n\t\n\t    var timeMs = function(val) {\n\t        var regex = /(\\d+):(\\d{2}):(\\d{2}),(\\d{3})/;\n\t        var parts = regex.exec(val);\n\t\n\t        if (parts === null) {\n\t            return 0;\n\t        }\n\t\n\t        for (var i = 1; i < 5; i++) {\n\t            parts[i] = parseInt(parts[i], 10);\n\t            if (isNaN(parts[i])) parts[i] = 0;\n\t        }\n\t\n\t        // hours + minutes + seconds + ms\n\t        return parts[1] * 3600000 + parts[2] * 60000 + parts[3] * 1000 + parts[4];\n\t    };\n\t\n\t    var msTime = function(val) {\n\t        var measures = [ 3600000, 60000, 1000 ]; \n\t        var time = [];\n\t\n\t        for (var i in measures) {\n\t            var res = (val / measures[i] >> 0).toString();\n\t            \n\t            if (res.length < 2) res = '0' + res;\n\t            val %= measures[i];\n\t            time.push(res);\n\t        }\n\t\n\t        var ms = val.toString();\n\t        if (ms.length < 3) {\n\t            for (i = 0; i <= 3 - ms.length; i++) ms = '0' + ms;\n\t        }\n\t\n\t        return time.join(':') + ',' + ms;\n\t    };\n\t\n\t    return pItems;\n\t})();\n\t\n\t// ignore exports for browser\n\tif (true) {\n\t    module.exports = parser;\n\t}\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7dcfd08333b4e36ab32d\n **/","// import {calc} from './calc';\nimport App from './app';\n\ndocument.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n\nfunction onDOMContentLoaded() {\n    window.app = new App();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/index.js\n **/","import Player from './player';\n\nexport default class App {\n    constructor() {\n        const crossorigin = 'http://cors.io/?u=';\n        this.form = document.querySelector('.panel__form');\n        this.pageForm = document.querySelector('.page_content_form');\n        this.pagePlayer = document.querySelector('.page_content_player');\n\n        this.links = {\n            video: '',\n            subtitles: '',\n            audio: ''\n        };\n\n        this.form.addEventListener('submit', onFormSubmit.bind(this));\n\n        function onFormSubmit(e) {\n            e.preventDefault();\n\n            this.links.video = crossorigin+this.form.querySelector('[name=\"video\"]').value;\n            this.links.subtitles = crossorigin+this.form.querySelector('[name=\"subtitles\"]').value;\n            this.links.audio = crossorigin+this.form.querySelector('[name=\"audio\"]').value;\n\n\n            this.pagePlayer.classList.remove('page_hidden');\n            this.pageForm.classList.add('page_hidden');\n            this.player = new Player(this.links, this.pagePlayer);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/app.js\n **/","import Song from './song';\nimport Video from './video';\nimport Subtitles from './subtitles';\n\nexport default class Player {\n    constructor(links, pagePlayer) {\n\n        // this.links = links;\n        this.pagePlayer = pagePlayer;\n        this.player = pagePlayer.querySelector('.player');\n        this.playButton = this.player.querySelector('.player__play');\n        this.stopButton = this.player.querySelector('.player__stop');\n        this.video = new Video(links.video, this.pagePlayer);\n        this.song = new Song(links.audio);\n        this.subtitles = new Subtitles(links.subtitles);\n        this.previousTime = 0;\n        // console.log(`${this.video.videoElement.videoWidth}:${this.video.videoElement.videoHeight}`);\n        this.video.videoElement.addEventListener('canplaythrough', () => {\n            initCanvas.call(this, this.video.videoElement.videoWidth, this.video.videoElement.videoHeight);\n        });\n        this.playButton.addEventListener('click', () => {\n            this.play();\n        });\n        this.stopButton.addEventListener('click', () => {\n            this.pause();\n        });\n\n        function initCanvas(videoWidth, videoHeight) {\n            let theCanvas = document.getElementById('canvas');\n            let context = theCanvas.getContext('2d');\n            let webglCanvas = document.getElementById('webgl-canvas');\n            let webglContext = webglCanvas.getContext('webgl') || webglCanvas.getContext('experimental-webgl');\n            webglCanvas.width = theCanvas.width = videoWidth;\n            webglCanvas.height = theCanvas.height = videoHeight;\n\n            let GL_TIME = 0;\n            let GL_TIME_UNIFORM = null;\n\n            prepareWebGL.call(this);\n\n            // initScratches();\n            this.play();\n\n\n            drawScreen.call(this);\n\n            function prepareWebGL(canvas, gl, sourceCanvas) {\n                var program = webglContext.createProgram();\n\n                var vertexCode = 'attribute vec2 coordinates;' +\n                    'attribute vec2 texture_coordinates;' +\n                    'varying vec2 v_texcoord;' +\n                    'void main() {' +\n                    '  gl_Position = vec4(coordinates, 0.0, 1.0);' +\n                    '  v_texcoord = texture_coordinates;' +\n                    '}';\n\n                var vertexShader = webglContext.createShader(webglContext.VERTEX_SHADER);\n                webglContext.shaderSource(vertexShader, vertexCode);\n                webglContext.compileShader(vertexShader);\n\n                var fragmentCode = 'precision mediump float;' +\n                    'varying vec2 v_texcoord;' +\n                    'uniform sampler2D u_texture;' +\n                    'uniform float u_time;' +\n                    'uniform vec2 u_resolution;' +\n                    'vec2 uv;' +\n                    'vec3 grayscale (vec3 color) {' +\n                    '   return vec3(0.2126*color.r + 0.7152*color.g + 0.0722*color.b);' +\n                    '}' +\n                    'float rand(vec2 co){' +\n                    '   return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);' +\n                    '}' +\n                    'float rand(float c){' +\n                    '   return rand(vec2(c,1.0));' +\n                    '}' +\n                    'float randomLine(float seed){' +\n                    '   float b = 0.01 * rand(seed);' +\n                    '   float a = rand(seed+1.0);' +\n                    '   float c = rand(seed+2.0) - 0.5;' +\n                    '   float mu = rand(seed+3.0);' +\n                    '   float l = 1.0;' +\n                    '   if ( mu > 0.2)' +\n                    '   l = pow(  abs(a * uv.x + b * uv.y + c ), 1.0/8.0 );' +\n                    '   else' +\n                    '   l = 2.0 - pow( abs(a * uv.x + b * uv.y + c), 1.0/8.0 );' +\n                    '   return mix(0.5, 1.0, l);' +\n                    '}' +\n                    'float randomBlotch(float seed){' +\n                    '\t  float x = rand(seed);' +\n                    '\t  float y = rand(seed+1.0);' +\n                    '\t  float s = 0.01 * rand(seed+2.0);' +\n                    '\t  vec2 p = vec2(x,y) - uv;' +\n                    '\t  p.x *= u_resolution.x / u_resolution.y;' +\n                    '\t  float a = atan(p.y,p.x);' +\n                    '\t  float v = 1.0;' +\n                    '\t  float ss = s*s * (sin(6.2831*a*x)*0.1 + 1.0);' +\n                    '\t  if ( dot(p,p) < ss ) v = 0.2;' +\n                    '\t  else' +\n                    '\t\tv = pow(dot(p,p) - ss, 1.0/16.0);' +\n                    '   return mix(0.3 + 0.2 * (1.0 - (s / 0.02)), 1.0, v);' +\n                    '}' +\n                    'void main() {' +\n                    '   uv = v_texcoord.xy;' +\n                    '   float t = float(int(u_time * 20.0));' +\n                    // Сохраняем кадр\n                    '   vec3 image = texture2D(u_texture, uv).rgb;' +\n                    // Добавляем ч/б\n                    // 'image = grayscale(image);'+\n                    '   float luma = dot( vec3(0.2126, 0.7152, 0.0722), image );' +\n                    '   image = luma * vec3(0.7, 0.7, 0.7);' +\n                    // Create a time-varyting vignetting effect\n                    '   float vI = 16.0 * (uv.x * (1.0-uv.x) * uv.y * (1.0-uv.y));' +\n                    'vI *= mix( 0.7, 1.0, rand(t + 0.5));' +\n                    // // Add additive flicker\n                    'vI += 1.0 + 0.4 * rand(t+8.);' +\n                    // // Add a fixed vignetting (independent of the flicker)\n                    'vI *= pow(16.0 * uv.x * (1.0-uv.x) * uv.y * (1.0-uv.y), 0.4);' +\n\n                    // Случайные линии\n                    'int l = int(8.0 * rand(t+7.0));' +\n                    'if ( 0 < l ) vI *= randomLine( t+6.0+17.* float(0));' +\n                    'if ( 1 < l ) vI *= randomLine( t+6.0+17.* float(1));' +\n                    'if ( 2 < l ) vI *= randomLine( t+6.0+17.* float(2));' +\n                    'if ( 3 < l ) vI *= randomLine( t+6.0+17.* float(3));' +\n                    'if ( 4 < l ) vI *= randomLine( t+6.0+17.* float(4));' +\n                    'if ( 5 < l ) vI *= randomLine( t+6.0+17.* float(5));' +\n                    'if ( 6 < l ) vI *= randomLine( t+6.0+17.* float(6));' +\n                    'if ( 7 < l ) vI *= randomLine( t+6.0+17.* float(7));' +\n\n                    // Случайные пятна\n\n\n                    'image = image * vI;' +\n                    'gl_FragColor = vec4(image, 1.0);' +\n\n                    // Черно-белый эффект\n                    // '   gl_FragColor = vec4(grayscale(texture2D(u_texture, v_texcoord).rgb), 1.0);' +\n                    // Зернистость\n                    // '   gl_FragColor.xyz *= (1.0+(rand(uv+t*.01)-.2)*.15);\t' +\n                    '}';\n\n                var fragmentShader = webglContext.createShader(webglContext.FRAGMENT_SHADER);\n                webglContext.shaderSource(fragmentShader, fragmentCode);\n                webglContext.compileShader(fragmentShader);\n\n                webglContext.attachShader(program, vertexShader);\n                webglContext.attachShader(program, fragmentShader);\n\n                webglContext.linkProgram(program);\n                webglContext.useProgram(program);\n\n                var positionLocation = webglContext.getAttribLocation(program, 'coordinates');\n                var texcoordLocation = webglContext.getAttribLocation(program, 'texture_coordinates');\n                GL_TIME_UNIFORM = webglContext.getUniformLocation(program, 'u_time');\n                var resolutionLocation = webglContext.getUniformLocation(program, \"u_resolution\");\n                webglContext.uniform2f(resolutionLocation, webglCanvas.width, webglCanvas.height);\n\n\n                var buffer = webglContext.createBuffer();\n                var vertices = [-1, -1,\n                    1, -1, -1, 1, -1, 1,\n                    1, -1,\n                    1, 1\n                ];\n                webglContext.bindBuffer(webglContext.ARRAY_BUFFER, buffer);\n                webglContext.bufferData(webglContext.ARRAY_BUFFER, new Float32Array(vertices), webglContext.STATIC_DRAW);\n                webglContext.enableVertexAttribArray(positionLocation);\n                webglContext.vertexAttribPointer(positionLocation, 2, webglContext.FLOAT, false, 0, 0);\n\n                buffer = webglContext.createBuffer();\n                var textureCoordinates = [\n                    0, 1,\n                    1, 1,\n                    0, 0,\n                    0, 0,\n                    1, 1,\n                    1, 0\n                ];\n                webglContext.bindBuffer(webglContext.ARRAY_BUFFER, buffer);\n                webglContext.bufferData(webglContext.ARRAY_BUFFER, new Float32Array(textureCoordinates), webglContext.STATIC_DRAW);\n                webglContext.enableVertexAttribArray(texcoordLocation);\n                webglContext.vertexAttribPointer(texcoordLocation, 2, webglContext.FLOAT, false, 0, 0);\n\n                let texture = webglContext.createTexture();\n                webglContext.bindTexture(webglContext.TEXTURE_2D, texture);\n                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_WRAP_S, webglContext.CLAMP_TO_EDGE);\n                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_WRAP_T, webglContext.CLAMP_TO_EDGE);\n                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_MIN_FILTER, webglContext.NEAREST);\n                webglContext.texParameteri(webglContext.TEXTURE_2D, webglContext.TEXTURE_MAG_FILTER, webglContext.NEAREST);\n\n            }\n\n            function drawScreen(t) {\n                // if (this.video.videoElement.paused || this.video.videoElement.ended) {\n                //     return false;\n                // }\n                // console.log('t: '+t);\n                // console.log('this.previousTime: '+this.previousTime);\n                if (t === undefined) t = 0;\n                let delta = t - this.previousTime;\n                // console.log('delta: '+delta);\n                this.previousTime = t;\n                context.drawImage(this.video.videoElement, 0, 0, theCanvas.width, theCanvas.height);\n                checkForSubtitles.call(this);\n                // addGrayScale();\n                // addScratches.call(this);\n                postprocessWebGL(delta);\n                requestAnimationFrame(drawScreen.bind(this));\n            }\n\n            function postprocessWebGL(delta) {\n                // console.log('gltime:'+GL_TIME);\n                GL_TIME += delta;\n                webglContext.uniform1f(GL_TIME_UNIFORM, GL_TIME / 1000);\n\n                webglContext.texImage2D(webglContext.TEXTURE_2D, 0, webglContext.RGBA, webglContext.RGBA, webglContext.UNSIGNED_BYTE, theCanvas);\n\n                webglContext.viewport(0, 0, webglCanvas.width, webglCanvas.height);\n                webglContext.enable(webglContext.DEPTH_TEST);\n                webglContext.clear(webglContext.COLOR_BUFFER_BIT);\n                webglContext.drawArrays(webglContext.TRIANGLES, 0, 6);\n            }\n\n\n\n            function checkForSubtitles() {\n\n                if (this.video.videoElement.currentTime >= this.subtitles.data[this.subtitles.index].endTime) {\n                    if (!this.subtitles.flag) {\n                        this.video.pause();\n                        timerForSubtitles.call(this, 3000);\n                        this.subtitles.flag = true;\n                    }\n                    drawSubtitlesPicture(this.subtitles.data[this.subtitles.index].text);\n                    // console.log(this.video.videoElement.currentTime);\n                }\n\n            }\n\n            function timerForSubtitles(delay) {\n                setTimeout(() => {\n                    this.video.play();\n                    this.subtitles.flag = false;\n                    this.subtitles.index++;\n                }, 3000);\n            }\n\n            function drawSubtitlesPicture(text) {\n                context.fillStyle = '#000000';\n                context.fillRect(0, 0, theCanvas.width, theCanvas.height);\n                context.fillStyle = 'white';\n                context.font = '30px Oranienbaum';\n                context.textBaseline = 'middle';\n                context.textAlign = \"center\";\n                context.fillText(text, theCanvas.width / 2, theCanvas.height / 2);\n            }\n\n            function addGrayScale() {\n                // First, draw it into the backing canvas\n                // Grab the pixel data from the backing canvas\n                let idata = context.getImageData(0, 0, theCanvas.width, theCanvas.height);\n                let data = idata.data;\n                // Loop through the pixels, turning them grayscale\n                for (let i = 0; i < data.length; i += 4) {\n                    let r = data[i];\n                    let g = data[i + 1];\n                    let b = data[i + 2];\n                    let brightness = (3 * r + 4 * g + b) >>> 3;\n                    data[i] = brightness;\n                    data[i + 1] = brightness;\n                    data[i + 2] = brightness;\n                }\n                idata.data.set(data);\n                // Draw the pixels onto the visible canvas\n                context.putImageData(idata, 0, 0);\n            }\n\n        }\n    }\n\n    play() {\n        this.video.play();\n        this.song.play();\n    }\n    pause() {\n        this.video.pause();\n        this.song.pause();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/player.js\n **/","export default class Song {\n    constructor(link) {\n        this.link = link;\n        this.audio = new Audio(link);\n        this.audio.crossOrigin = \"anonymous\";\n        this.context = new(window.AudioContext || window.webkitAudioContext);\n        this.source = this.context.createMediaElementSource(this.audio);\n        // gainNode = context.createGain();\n        //filterNode = context.createBiquadFilter();\n\n\n        const distortion = this.context.createWaveShaper();\n        const biquadFilter = this.context.createBiquadFilter();\n        biquadFilter.type = 'lowpass';\n        biquadFilter.frequency.value = 1000;\n        biquadFilter.gain.value = 20;\n        this.source.connect(distortion);\n        distortion.connect(biquadFilter);\n        // this.generateWHiteNoize();\n        biquadFilter.connect(this.context.destination);\n\n    }\n    addDirtyEffects() {\n\n    }\n    generateWHiteNoize() {\n        var bufferSize = 4096;\n        var pinkNoise = (function() {\n            var b0, b1, b2, b3, b4, b5, b6;\n            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n            var node = this.context.createScriptProcessor(bufferSize, 1, 1);\n            node.onaudioprocess = function(e) {\n                var output = e.outputBuffer.getChannelData(0);\n                for (var i = 0; i < bufferSize; i++) {\n                    var white = Math.random() * 2 - 1;\n                    b0 = 0.99886 * b0 + white * 0.0555179;\n                    b1 = 0.99332 * b1 + white * 0.0750759;\n                    b2 = 0.96900 * b2 + white * 0.1538520;\n                    b3 = 0.86650 * b3 + white * 0.3104856;\n                    b4 = 0.55000 * b4 + white * 0.5329522;\n                    b5 = -0.7616 * b5 - white * 0.0168980;\n                    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                    output[i] *= 22.9; // (roughly) compensate for gain\n                    b6 = white * 0.115926;\n                }\n            }\n            return node;\n        }.bind(this))();\n\n        pinkNoise.connect(this.context.destination);\n    }\n    play() {\n        this.audio.play();\n    }\n    pause() {\n        this.audio.pause();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/song.js\n **/","import parser from 'subtitles-parser';\n// import moment from 'moment';\n\nexport default class Subtitles {\n    constructor(link) {\n        this.link = link;\n        // let data;\n        this.data = getFile();\n        this.parseData();\n        this.index = 0; // индекс текущих субтитров\n        this.flag = false; // в видео еще не было субтитров\n\n        function getFile() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', link, false);\n            xhr.send();\n            if (xhr.status === 200) {\n                return parser.fromSrt(xhr.response);\n            }\n        }\n    }\n    parseData() {\n        this.data.forEach((elem) => {\n            elem.startTime = countSeconds(elem.startTime);\n            elem.endTime = countSeconds(elem.endTime);\n        });\n\n        function countSeconds(time) {\n            time = time.replace(/,/g, '.');\n            let hours = 60 * time.slice(0, 2);\n            let minutes = 60 * (hours + Number(time.slice(3, 5)));\n            let seconds = minutes + Number(time.slice(6, 12));\n            return seconds;\n        }\n\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/subtitles.js\n **/","export default class Video {\n    constructor(link, pagePlayer) {\n        // this.link = link;\n        this.videoElement = document.createElement('video');\n        this.videoElement.setAttribute('crossorigin', 'anonymous');\n        this.videoDiv = document.createElement('div');\n        pagePlayer.appendChild(this.videoDiv);\n        this.videoDiv.appendChild(this.videoElement);\n        this.videoDiv.setAttribute('style', 'display:none;');\n        this.videoElement.setAttribute('src', link);\n        // this.videoElement.setAttribute('width', this.videoElement.videoWidth/2);\n        // this.videoElement.setAttribute('height', this.videoElement.videoHeight/2);\n        this.videoElement.muted = true;\n    }\n    play() {\n        this.videoElement.play();\n    }\n    pause() {\n        this.videoElement.pause();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/video.js\n **/","var parser = (function() {\n    var pItems = {};\n\n    /**\n     * Converts SubRip subtitles into array of objects\n     * [{\n     *     id:        `Number of subtitle`\n     *     startTime: `Start time of subtitle`\n     *     endTime:   `End time of subtitle\n     *     text: `Text of subtitle`\n     * }]\n     *\n     * @param  {String}  data SubRip suntitles string\n     * @param  {Boolean} ms   Optional: use milliseconds for startTime and endTime\n     * @return {Array}  \n     */\n    pItems.fromSrt = function(data, ms) {\n        var useMs = ms ? true : false;\n\n        data = data.replace(/\\r/g, '');\n        var regex = /(\\d+)\\n(\\d{2}:\\d{2}:\\d{2},\\d{3}) --> (\\d{2}:\\d{2}:\\d{2},\\d{3})/g;\n        data = data.split(regex);\n        data.shift();\n\n        var items = [];\n        for (var i = 0; i < data.length; i += 4) {\n            items.push({\n                id: data[i].trim(),\n                startTime: useMs ? timeMs(data[i + 1].trim()) : data[i + 1].trim(),\n                endTime: useMs ? timeMs(data[i + 2].trim()) : data[i + 2].trim(),\n                text: data[i + 3].trim()\n            });\n        }\n\n        return items;\n    };\n\n    /**\n     * Converts Array of objects created by this module to SubRip subtitles\n     * @param  {Array}  data\n     * @return {String}      SubRip subtitles string\n     */\n    pItems.toSrt = function(data) {\n        if (!data instanceof Array) return '';\n        var res = '';\n\n        for (var i = 0; i < data.length; i++) {\n            var s = data[i];\n\n            if (!isNaN(s.startTime) && !isNaN(s.endTime)) {\n                s.startTime = msTime(parseInt(s.startTime, 10));\n                s.endTime = msTime(parseInt(s.endTime, 10));\n            }\n\n            res += s.id + '\\r\\n';\n            res += s.startTime + ' --> ' + s.endTime + '\\r\\n';\n            res += s.text.replace('\\n', '\\r\\n') + '\\r\\n\\r\\n';\n        }\n\n        return res;\n    };\n\n    var timeMs = function(val) {\n        var regex = /(\\d+):(\\d{2}):(\\d{2}),(\\d{3})/;\n        var parts = regex.exec(val);\n\n        if (parts === null) {\n            return 0;\n        }\n\n        for (var i = 1; i < 5; i++) {\n            parts[i] = parseInt(parts[i], 10);\n            if (isNaN(parts[i])) parts[i] = 0;\n        }\n\n        // hours + minutes + seconds + ms\n        return parts[1] * 3600000 + parts[2] * 60000 + parts[3] * 1000 + parts[4];\n    };\n\n    var msTime = function(val) {\n        var measures = [ 3600000, 60000, 1000 ]; \n        var time = [];\n\n        for (var i in measures) {\n            var res = (val / measures[i] >> 0).toString();\n            \n            if (res.length < 2) res = '0' + res;\n            val %= measures[i];\n            time.push(res);\n        }\n\n        var ms = val.toString();\n        if (ms.length < 3) {\n            for (i = 0; i <= 3 - ms.length; i++) ms = '0' + ms;\n        }\n\n        return time.join(':') + ',' + ms;\n    };\n\n    return pItems;\n})();\n\n// ignore exports for browser\nif (typeof exports === 'object') {\n    module.exports = parser;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/subtitles-parser/index.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}